""" Работа со словарями """
""" Метод items() - возвращает объект-итератор dict_items

Если в цикле необходимо работать одновременно с ключами и значениями, как с
парами, используют метод items."""

my_dict = {'one': 1, 'two': 2, 'three': 3, 'four': 4, 'ten': 10}
print(my_dict.items())  # dict_items([('one', 1), ('two', 2), ('three', 3), ('four', 4), ('ten', 10)])

for tuple_data in my_dict.items():  # плохо
    print(tuple_data)
    print(f'{tuple_data[0] = } value before 100 - {100 - tuple_data[1]}')

for key, value in my_dict.items():  # хорошо
    print(f'{key = } value before 100 - {100 - value}')

""" Метод возвращает объект итератор dict_items. Если создать цикл for с одной
переменной между for и in, получим кортеж из пар элементов — ключа и значения.
Обычной используют две переменные в цикле: первая принимает ключ, а вторая
значение. Такой подход облегчает чтение кода и позволяют использовать ключ и
значение по-отдельности."""
