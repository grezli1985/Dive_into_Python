""" Термины лекции
● Тестирование программного обеспечения — это исследование, проводимое
с целью предоставления заинтересованным сторонам информации о
качестве тестируемого программного продукта или услуги. Тестирование
программного обеспечения также может обеспечить объективный,
независимый взгляд на программное обеспечение, позволяющий бизнесу
оценить и понять риски внедрения программного обеспечения.
● Простое число — натуральное число, имеющее ровно два различных
натуральных делителя. Другими словами, натуральное число p является
простым, если оно отлично от 1 и делится без остатка только на 1 и на само p.
● Натуральные числа (от лат. naturalis «естественный») — числа,
возникающие естественным образом при счёте (1, 2, 3, 4, 5, 6, 7 и так далее).
● Разработка через тестирование (англ. test-driven development, TDD) —
техника разработки программного обеспечения, которая основывается на
повторении очень коротких циклов разработки: сначала пишется тест,
покрывающий желаемое изменение, затем пишется код, который позволит
пройти тест, и под конец проводится рефакторинг нового кода к
соответствующим стандартам.

Подробный текст лекции
0. Основы тестирования

Тестирование кода является неотъемлемой частью больших проектов. Мало кто
пишет тесты для одноразовых задач в несколько строчек кода. Но если ваш проект
планирует развиваться, тесты помогут экономить время при расширении
функционала, внесении доработок в существующий код.

Обычно тестирование подразделяется на три категории:
    1. Функциональное тестирование
        ○ Модульное (компонентное)
        ○ Интеграционное
        ○ Системное
    4
        ○ Регрессионное
        ○ Приемочное
        ○ Смоук
    2. Тестирование производительности
        ○ Тестирование отказоустойчивости
        ○ Нагрузочное
        ○ Объемное
        ○ Тестирование масштабируемости
    3. Обслуживание (регресс и обслуживание)
        ○ Регрессионное
        ○ Тестирование технического обслуживания

Список далеко не полный. Да и способов группировки тестирования больше много
больше. В рамках данного курса и лекции не будут рассматриваться все возможные
виды тестирования. Главная цель занятия - познакомить с тремя основными
инструментами, позволяющими писать тесты для ваших Python проектов. При этом
в рамках проекта обычно используется один из трёх рассматриваемых вариантов, а
не все разом. По традиции разберём возможные варианты на примерах кода с
пояснениями."""