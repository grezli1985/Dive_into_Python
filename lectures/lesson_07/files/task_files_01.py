"""  Файлы
Файл — это область данных на носителе информации (диске, флешке и т.п.). Файл
используется как базовый объект взаимодействия с данными. Операционная
система обращается к файлу по имени."""
""" Функция open()
В Python для получения доступа файлу используют функцию open().

open(file, mode='r', buffering=-1, encoding=None, errors=None,
newline=None, closefd=True, opener=None)

Функция open имеет один обязательный параметр — file. Обычно file — это объект
типа str или bytes, который представляет абсолютный или относительный путь к
файлу. Относительный путь считается от каталога запуска программы. Функция
возвращает файловый объект или вызывает ошибку OSError, если не получилось
вернуть объект.
Рассмотрим пример."""

f = open('text_data.txt')
print(f)
print(list(f))


""""На выходе получим примерно такой вывод из переменной f:
<_io.TextIOWrapper name='text_data.txt' mode='r' encoding='UTF-8'>
Файловый объект для операций текстового ввода выводу файла text_data.txt в
режиме чтения в кодировке cp1251.
Для вывода информации воспользовались превращением файлового объекта в
список: list(f). Подобный приём удобен для получения всего текстового файла
целиком в виде элементов списка. Каждая строка лежит в новой ячейке. Но если
файл имеет большие размеры, его сохранение в список может занять много
времени. Кроме того будет потрачена оперативная память. Учитывайте это при
открытии файлов больше, чем свободная ОЗУ.
Если не указывать режим открытия, файл открывается для чтения текста. При этом
в качестве кодировки по умолчанию используется кодировка ОС. И если с режимом
чтения понятно, то с кодировкой могут быть проблемы. Вот так выглядит “Привет,
мир!”, сохранённый в utf-8, но открытый в cp1251 - РџСЂРёРІРµС‚, РјРёСЂ!
Чтобы избежать проблем при работе с файлами рекомендуется при открытии
указывать как минимум три параметра: название файла, режим и кодировку."""
