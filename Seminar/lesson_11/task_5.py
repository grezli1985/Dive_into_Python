""" –ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
    üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞.
    üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è.
    üìå –ü—Ä–∏ —ç—Ç–æ–º –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
    üìå –°–∫–ª–∞–¥—ã–≤–∞–µ–º –∏ –≤—ã—á–∏—Ç–∞–µ–º –ø–µ—Ä–∏–º–µ—Ç—Ä—ã, –∞ –Ω–µ –¥–ª–∏–Ω—É –∏ —à–∏—Ä–∏–Ω—É.
    üìå –ü—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π."""


class Square:

    def __init__(self, length, width=None):
        self.length = length
        if width:
            self.width = width
        else:
            self.width = length

    def square(self):
        """–ú–µ—Ç–æ–¥–∞, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–µ –ø–ª–æ—â–∞–¥—å"""
        return self.length * self.width

    def perimetr(self):
        """–ú–µ—Ç–æ–¥–∞, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–µ –ø–µ—Ä–∏–º–µ—Ç—Ä"""
        return (self.length * self.width)*2

    def __add__(self, other):
        new_length = self.length + other.length
        new_width = self.width + other.width
        return Square(new_length, new_width)

    def __sub__(self, other):
        if self.length - other.length < 0 or self.width - other.width < 0:
            raise ValueError
        new_length = self.length - other.length
        new_width = self.width - other.width
        return Square(new_length, new_width)


square_1 = Square(10, 6)
square_2 = Square(2, 1)
square_3 = square_1 + square_2
square_4 = square_1 - square_2

print(square_3.perimetr())
print(square_4.perimetr())

# square_4 = square_2 - square_1
